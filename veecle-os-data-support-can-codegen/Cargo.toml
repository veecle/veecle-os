[package]
name = "veecle-os-data-support-can-codegen"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
description = "Generates Veecle OS code from a CAN-DBC file"
homepage.workspace = true
repository.workspace = true
license.workspace = true
publish = true

[package.metadata]
# This crate's tests are filesystem based.
workspace-checks.miri = false

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
targets = []

[[test]]
harness = false
name = "generate"

[dependencies]
anyhow = { workspace = true }
can-dbc = { workspace = true }
heck = { workspace = true }
prettyplease = { workspace = true }
proc-macro2 = { workspace = true }
quote = { workspace = true }
syn = { workspace = true, features = [
  "clone-impls",
  "derive",
  "extra-traits",
  "full",
  "parsing",
  "printing",
  "proc-macro",
] }
unicode-ident = { workspace = true }

[dev-dependencies]
colored = { workspace = true }
datatest-stable = { workspace = true }
# We override the package name so that the tests can test that we only refer to it via the passed path.
# This also means we can't use `workspace = true` because of cargo limitations.
my-arbitrary = { version = "1.4.2", features = ["derive"], package = "arbitrary" }
my-serde = { version = "1.0.219", default-features = false, features = [
  "derive",
], package = "serde" }
my-veecle-os-data-support-can = { path = "../veecle-os-data-support-can", package = "veecle-os-data-support-can" }
my-veecle-os-runtime = { path = "../veecle-os-runtime", package = "veecle-os-runtime" }
pretty_assertions = { workspace = true, features = ["std"] }

[lints]
workspace = true
