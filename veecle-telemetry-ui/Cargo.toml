[package]
name = "veecle-telemetry-ui"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
description = "Veecle OS telemetry UI"
homepage.workspace = true
repository.workspace = true
license.workspace = true
publish = true

[package.metadata]
# This crate uses `#![forbid(unsafe_code)]`.
workspace-checks.miri = false

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
targets = []

[dependencies]
anyhow = { workspace = true }
clap = { workspace = true, default-features = true, features = ["derive"] }
eframe = { workspace = true, default-features = false, features = [
  "default_fonts",
  "glow",
  "persistence",
  "wayland",
  "x11",
] }
egui = { workspace = true, default-features = false }
egui_extras = { workspace = true, default-features = false, features = ["serde"] }
egui-notify = { workspace = true }
egui-remixicon = { workspace = true }
ewebsock = { workspace = true }
indexmap = { workspace = true, features = ["std"] }
log = { workspace = true }
re_log = { workspace = true, features = ["setup"] }
rfd = { workspace = true, features = ["default"] }
serde = { workspace = true }
serde_json = { workspace = true, features = ["std"] }
veecle-telemetry = { workspace = true, features = ["alloc"] }
veecle-telemetry-server-protocol = { workspace = true }

[dev-dependencies]
rand = { workspace = true, features = ["thread_rng"] }
veecle-os-runtime = { workspace = true, features = ["veecle-telemetry"] }
veecle-osal-std = { workspace = true }
veecle-telemetry = { workspace = true, features = ["enable", "std"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = { workspace = true, features = ["default"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
poll-promise = { workspace = true, features = ["web"] }
wasm-bindgen-futures = { workspace = true }
web-sys = { workspace = true }
web-time = { workspace = true }

[lints]
workspace = true
