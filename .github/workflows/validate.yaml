# Shorten the path in the GitHub UI.
name: validate.yaml

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Cancel jobs for previous commits in the same branch.
# On main `head_ref` is not available and `run_id` is always unique.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  validate-cargo-toml:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup-rustup
      - uses: ./.github/actions/setup-tools
        with:
          just: true

      - name: Validate Cargo.lock files (on failure, you may need to update your branch or `just update-lockfiles`)
        run: just validate-lockfiles

  validate-commits:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-rustup
      - uses: ./.github/actions/setup-tools
        with:
          convco: true

      - name: Check conventional commits
        run: convco check "origin/${GITHUB_BASE_REF}.."

  validate-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-rustup
      - uses: ./.github/actions/setup-arm-gnu-toolchain
      - uses: ./.github/actions/setup-cmake
      - uses: ./.github/actions/setup-tools
        with:
          cargo-deny: true
          cargo-nextest: true
          cargo-vet: true
          taplo-cli: true

      - uses: Swatinem/rust-cache@v2

      # `someip` tests `cargo run` this binary internally, pre-build it so they don't timeout.
      - run: cargo build -p someip-test-service

      - run: >
          cargo nextest run
          --workspace
          -E '(not package(workspace)) | (test(/^veecle-os::/) & (not test(/::(clippy|doc)$/)))'
          --no-fail-fast

  validate-trunk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-rustup
      - uses: ./.github/actions/setup-tools
        with:
          trunk: true

      - run: trunk build
        working-directory: veecle-telemetry-ui

  validate-rust-clippy-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-rustup
      - uses: ./.github/actions/setup-arm-gnu-toolchain
      - uses: ./.github/actions/setup-cmake
      - uses: ./.github/actions/setup-tools
        with:
          cargo-nextest: true

      - uses: Swatinem/rust-cache@v2

      - run: cargo nextest run --package workspace -E 'test(/^veecle-os::(clippy|doc)$/)' --no-fail-fast

  validate-rust-workspaces:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-rustup
      - uses: ./.github/actions/setup-arm-gnu-toolchain
      - uses: ./.github/actions/setup-cmake
      - uses: ./.github/actions/setup-tools
        with:
          cargo-deny: true
          cargo-nextest: true
          cargo-vet: true
          taplo-cli: true

      - uses: Swatinem/rust-cache@v2

      - run: cargo nextest run --package workspace -E 'not test(/^veecle-os::/)' --no-fail-fast

  validate-miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-rustup
        with:
          rust-toolchain-toml: rust-toolchain-nightly.toml
      - uses: ./.github/actions/setup-miri
      - uses: ./.github/actions/setup-cmake
      - uses: ./.github/actions/setup-tools
        with:
          cargo-nextest: true

      - run: cargo nextest run -p workspace --no-fail-fast --run-ignored all -- miri

  validate-yaml:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - run: pipx run yamllint .

  validate:
    runs-on: ubuntu-latest
    needs:
      - validate-cargo-toml
      - validate-commits
      - validate-miri
      - validate-rust
      - validate-rust-clippy-doc
      - validate-rust-workspaces
      - validate-trunk
      - validate-yaml
    if: always()
    steps:
      - run: exit 1
        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')) }}
